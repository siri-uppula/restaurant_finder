spring.application.name=resturantfinder
spring.datasource.url=jdbc:postgresql://localhost:5432/bitecheckdb
spring.datasource.username=og
spring.datasource.password=admin
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

jwt.secret=QWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoxMjM0NTY=
jwt.expiration=86400


google.client.id=594038067254-9gc1vbkm1ra371g6ecvv5e3g4lcsl2f8.apps.googleusercontent.com
google.client.secret=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
google.redirect.uri=http://localhost:3000


# Swagger API Docs Path
springdoc.api-docs.path=/api-docs
# Swagger UI Path
springdoc.swagger-ui.path=/swagger-ui.html


# this is for config server
#spring.config.import=optional:configserver:http://localhost:8888

aws.accessKey=AKIA3RYC6EFHHX5VQTFG
aws.secretKey=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
aws.region=us-east-1
aws.s3.bucket-name=restaurantfinder-files


google.api.key=AIzaSyBySUHGKZMzennGXX03aLp3IqjZqqwgyqU


# logger setting
logging.level.org.springframework=DEBUG
logging.level.com.opensource.resturantfinder=DEBUG


spring.datasource.hikari.connection-init-sql=SET search_path TO "$user", public;

# redis cache config
spring.cache.type=redis
spring.redis.host=localhost
spring.redis.port=6379
spring.cache.redis.time-to-live=3600000

# Google Maps integrations
maps.api.key=AIzaSyDewJC5STCF9FQRfe1EAVnU8kJvfsRhLPU
maps.api.url=https://maps.googleapis.com/maps/api/place/nearbysearch/json

# jackson time serialization
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false

# logging
logging.level.org.springframework.aop=DEBUG

